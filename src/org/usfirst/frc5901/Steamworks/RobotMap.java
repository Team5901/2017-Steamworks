// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5901.Steamworks;

import com.ctre.CANTalon;

import edu.wpi.first.wpilibj.ADXRS450_Gyro;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.VictorSP;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {

	//Motors
    public static SpeedController drivetrainLeftFrontMotor;
    public static SpeedController drivetrainRightFrontMotor;
    public static SpeedController drivetrainLeftRearMotor;
    public static SpeedController drivetrainRightRearMotor;
    public static RobotDrive drivetrainRobotDrive41;
    public static SpeedController collectorMotor;
    public static SpeedController feederMotor;
    public static SpeedController gearMotor;
    public static SpeedController balldumpMotor;

    //Gyro
    public static ADXRS450_Gyro drivetrainGodKevinGyro;
    
    //Encoder
    public static Encoder leftEncoder;
    public static Encoder rightEncoder;
    public static Encoder gearEncoder;
    static double diameter = 6.0; // inches
    static double distancePerRev = diameter * Math.PI;    
    static int ticksPerRev = 2048; // what you set them to      

    public static void init() {
    	
        //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        //%%%%%%%%%%%%% DRIVETRAIN %%%%%%%%%%%%%%
        //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    	
        drivetrainLeftFrontMotor = new CANTalon(1);        
        drivetrainRightFrontMotor = new CANTalon(2);        
        drivetrainLeftRearMotor = new CANTalon(3);        
        drivetrainRightRearMotor = new CANTalon(4);
        
        drivetrainRobotDrive41 = new RobotDrive(drivetrainLeftFrontMotor, drivetrainLeftRearMotor,
              drivetrainRightFrontMotor, drivetrainRightRearMotor);
        
        drivetrainRobotDrive41.setMaxOutput(1.0);
        drivetrainRobotDrive41.setInvertedMotor(RobotDrive.MotorType.kFrontRight, true);
        drivetrainRobotDrive41.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);
        
        //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        //%%%%%%%%%%%%% GEAR ACTUATOR %%%%%%%%%%%%%%
        //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        gearMotor = new CANTalon(6);
        
        //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        //%%%%%%%%%%%%% COLLECTOR/CLIMBER %%%%%%%%%%%%%%
        //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        collectorMotor = new VictorSP(0);
        balldumpMotor = new CANTalon(5);
        		
        //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        //%%%%%%%%%%%%% GYRO %%%%%%%%%%%%%%
        //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        drivetrainGodKevinGyro = new ADXRS450_Gyro();
        LiveWindow.addSensor("Drivetrain", "GodKevinGyro", drivetrainGodKevinGyro);
        
        //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        //%%%%%%%%%%%%% ENCODER %%%%%%%%%%%%%%
        //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        
        //Drivetrain
        leftEncoder = new Encoder(8, 9, false, Encoder.EncodingType.k1X);        
        leftEncoder.setDistancePerPulse(distancePerRev / ticksPerRev);      	
      	leftEncoder.setMaxPeriod(.1);
      	leftEncoder.setMinRate(10);	
      	leftEncoder.setReverseDirection(true);
      	leftEncoder.setSamplesToAverage(7);
      	
      	//Gear Actuator
      	gearEncoder = new Encoder(5, 6, false, Encoder.EncodingType.k1X);  
        
        
    }
}
